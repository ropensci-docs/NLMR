[{"path":"https://docs.ropensci.org/NLMR/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/CONTRIBUTING.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs?","title":"CONTRIBUTING","text":"Submit issue Issues page","code":""},{"path":"https://docs.ropensci.org/NLMR/CONTRIBUTING.html","id":"issues-and-pull-requests","dir":"","previous_headings":"","what":"Issues and Pull Requests","title":"CONTRIBUTING","text":"considering pull request, may want open issue first discuss maintainer(s).","code":""},{"path":"https://docs.ropensci.org/NLMR/CONTRIBUTING.html","id":"code-contributions","dir":"","previous_headings":"","what":"Code contributions","title":"CONTRIBUTING","text":"Fork repo GitHub account Clone version account machine account, e.g,. git clone https://github.com/<yourgithubusername>/{repo}.git Make sure track progress upstream (.e., version {repo} {owner}/{repo}) git remote add upstream https://github.com/{owner}/{repo}.git. making changes make sure pull changes upstream either git fetch upstream merge later git pull upstream fetch merge one step Make changes (bonus points making changes new feature branch - see https://guides.github.com/introduction/flow/ contribute branching, making changes, submitting pull request) Push account Submit pull request home base (likely master branch, check make sure) {owner}/{repo}","code":""},{"path":"https://docs.ropensci.org/NLMR/CONTRIBUTING.html","id":"discussion-forum","dir":"","previous_headings":"","what":"Discussion forum","title":"CONTRIBUTING","text":"Check discussion forum think issue requires longer form discussion.","code":""},{"path":"https://docs.ropensci.org/NLMR/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/articles/getstarted.html","id":"basic-landscape-generation","dir":"Articles","previous_headings":"","what":"Basic landscape generation","title":"Basic Usage of NLMR","text":"NLMR supplies 16 NLM algorithms. algorithms differ spatial auto-correlation, auto-correlation (random NLM) constant gradient (planar gradients) (see Palmer 1992). 16 NLM algorithms : distance gradient edge gradient hierarchical curdling wheyed hierarchical curdling midpoint displacement neighbourhood clustering planar gradient random random cluster nearest-neighbour random element random mosaic fields random polygonal landscapes random percolation random rectangular cluster spatially correlated random fields (Gaussian random fields) two-dimensional fractional Brownian motion basic syntax used produce NLM landscape : example, produce simple random neutral landscape one use following code:","code":"nlm_modeltype(ncol, nrow, resolution, ...) x <- NLMR::nlm_random(20,20) plot(x)"},{"path":"https://docs.ropensci.org/NLMR/articles/getstarted.html","id":"merging-landscapes","dir":"Articles","previous_headings":"","what":"Merging landscapes","title":"Basic Usage of NLMR","text":"Multiple NLM rasters can merged merged together create new landscape patterns. single primary base raster can merged number additional secondary rasters, optional scaling factors used control influence secondary rasters. util_merge function used merge rasters example :","code":"#Create primary landscape raster   pL <- NLMR::nlm_edgegradient(ncol = 100,                                nrow = 100)    plot(pL) #Create secondary landscape rasters   sL1 <- NLMR::nlm_distancegradient(ncol = 100,                                     nrow = 100,                                     origin = c(10, 10, 10, 10))   sL2 <- NLMR::nlm_random(ncol = 100,                           nrow = 100)    mL1 <- pL + (sL1 + sL2)      plot(mL1)"},{"path":"https://docs.ropensci.org/NLMR/articles/getstarted.html","id":"classifying-categories","dir":"Articles","previous_headings":"","what":"Classifying categories","title":"Basic Usage of NLMR","text":"Landscape rasters generated NLMR contain continuous values 0 1, though can converted categorical values using util_classify landscapetools. default classes numerical starting 1. non-numerical levels required, level_names can specified. classes can plotted selecting discrete = TRUE show_landscape.","code":"nr <- NLMR::nlm_fbm(50, 100, fract_dim = 1.2)                                nr_classified <- landscapetools::util_classify(nr, weighting = c(0.3, 0.3, 0.3))  plot(nr_classified)"},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/articles/nlm_software_heritage.html","id":"replicate-maps","dir":"Articles","previous_headings":"","what":"Replicate maps","title":"NLMR Software Heritage","text":"One reasons actually use neutral landscape models statistical comparison testing development landscape metrics. Therefore, one needs replicates","code":""},{"path":"https://docs.ropensci.org/NLMR/articles/nlm_software_heritage.html","id":"built-in-parameters","dir":"Articles","previous_headings":"Replicate maps","what":"Built in parameters","title":"NLMR Software Heritage","text":"neutral landscape models NLMR can simulated varying number parameters control spatial autocorrelation. Simulating replicates properties parameter interest can therefore achieved like :","code":"library(NLMR) library(landscapetools) #> Warning: package 'landscapetools' was built under R version 4.3.3 library(purrr) library(raster) #> Loading required package: sp  # write a simulation function with the desired parameters simulate_landscape = function(x) {   nlm_randomcluster(   ncol = 30,   nrow = 30,   p = 0.4,   ai = c(0.25, 0.25, 0.5),   rescale = FALSE   ) }  # rerun it for example 5 times landscape_list <- rerun(5, simulate_landscape())  #> Warning: `rerun()` was deprecated in purrr 1.0.0. #> ℹ Please use `map()` instead. #>   # Previously #>   rerun(5, simulate_landscape()) #>  #>   # Now #>   map(1:5, ~ simulate_landscape()) #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #> Loading required namespace: igraph  # look at the result show_landscape(stack(landscape_list)) #> Warning: Removed 295 rows containing missing values or values outside the scale range #> (`geom_raster()`)."},{"path":"https://docs.ropensci.org/NLMR/articles/nlm_software_heritage.html","id":"landscape-metrics","dir":"Articles","previous_headings":"Replicate maps","what":"Landscape metrics","title":"NLMR Software Heritage","text":"interested landscapes share metric built-parameter, clever way can came simulate models long takes desired number landscapes certain metric. exemplary workflow look like :","code":"library(NLMR) library(landscapetools) library(landscapemetrics) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:raster': #>  #>     intersect, select, union #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # simulation helpers n <- 1 # counter and index variable sim_results <- list() # list to store simulation results  # loop until we have 5 landscapes with the metric we are interested in while (n < 6) {   # In this use case we are interested in a categorical metric,   # which is why we reclassify the continous result in three categories   landscape <- nlm_mosaictess(100, 100, germs = 50) %>%   util_classify(n = 3)      # We are interested in the Euclidean Nearest Neighbor Distance Distribution   enn_value <- lsm_l_enn_mn(landscape) %>%   pull(value)      # ... and we want to keep simulation results that have a mean ENN   # between 7.5 and 8   if (enn_value > 7.5 | enn_value < 8) {     sim_results[n] <- landscape     n = n + 1   } }  # look at the result show_landscape(stack(sim_results))"},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/articles/overview_tips.html","id":"selection-of-possible-merges","dir":"Articles","previous_headings":"Overview","what":"Selection of possible merges","title":"NLMR Overview and Tips","text":"","code":"# 1. edge_nlm <- nlm_edgegradient(100, 100) distance_nlm <- nlm_distancegradient(100, 100, origin = c(20, 20,10, 10)) random_nlm <- nlm_random(100, 100)  # 2. gauss_nlm <- nlm_gaussianfield(100, 100) rectan_nlm <- nlm_randomrectangularcluster(100, 100, maxl = 30, minl = 10)  # 3. mosaic_nlm <- nlm_mosaicfield(100, 100)  # 4. planar_nlm <- nlm_planargradient(100, 100) tess_nlm <- nlm_mosaictess(100, 100, germs = 200)  # plot it landscapetools::show_landscape(list(\"a\" = landscapetools::util_merge(edge_nlm, list(distance_nlm, random_nlm)),                                     \"b\" = landscapetools::util_merge(gauss_nlm, rectan_nlm),                                     \"c\" = landscapetools::util_merge(mosaic_nlm, list(random_nlm)),                                     \"d\" = landscapetools::util_merge(planar_nlm, list(distance_nlm, tess_nlm))))"},{"path":"https://docs.ropensci.org/NLMR/articles/overview_tips.html","id":"tips","dir":"Articles","previous_headings":"","what":"Tips","title":"NLMR Overview and Tips","text":"new raster package, hope collect useful tips handle raster data general. Furthermore, section also serves place collect workflows use NLMR R packages simulate specific patterns one can find literature.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/articles/overview_tips.html","id":"counting-cells","dir":"Articles","previous_headings":"Tips > Basics","what":"Counting cells","title":"NLMR Overview and Tips","text":"Ecologists example often interested much habitat one actually finds study area looking couple nice ways rasters. One :","code":"library(NLMR) library(raster) library(dplyr)  landscape <- nlm_curds(curds = c(0.5, 0.3, 0.6),                        recursion_steps = c(32, 6, 2),                        wheyes = c(0.1, 0.05, 0.2))  # count cells for each category (0 = Matrix, 1 = Habitat) landscape %>%    freq() ##      value  count ## [1,]     0 103336 ## [2,]     1  44120"},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/articles/overview_tips.html","id":"use-matrix-of-parameter-to-simulate-landscapes","dir":"Articles","previous_headings":"Tips > More specific tips","what":"Use matrix of parameter to simulate landscapes","title":"NLMR Overview and Tips","text":"","code":"library(NLMR) library(landscapetools) library(raster) library(dplyr) library(purrr) library(tibble)  # simulation function that has the parameters we want to alter as input simulate_landscape = function(roughness, weighting){     nlm_mpd(ncol = 33,             nrow = 33,             roughness = roughness,             rescale = TRUE) %>%         util_classify(weighting = weighting) }  # paramter combinations we are interested in param_df = expand.grid(roughness = c(0.2, 0.9),                        weighting = list(c(0.2, 0.8), c(0.2, 0.3, 0.5))) %>%     as.tibble()  # map over the nested tibble and use each row as input for our simulation function nlm_list = param_df %>% pmap(simulate_landscape)  # look at the results show_landscape(nlm_list)"},{"path":"https://docs.ropensci.org/NLMR/articles/overview_tips.html","id":"simulate-ecotones","dir":"Articles","previous_headings":"Tips > More specific tips","what":"Simulate ecotones","title":"NLMR Overview and Tips","text":"Merging different types NLMs, planar gradient less autocorrelated landscape, provide means generating complex landscapes realistic-looking ecotones (Travis 2004):","code":"library(NLMR) library(landscapetools)  # landscape with higher autocorrelation  high_autocorrelation <- nlm_edgegradient(ncol = 100, nrow = 100, direction = 80)  # landscape with lower autocorrelation  low_autocorrelation <- nlm_fbm(ncol = 100, nrow = 100, fract_dim = 0.5)  # merge to derive ecotone ecotones <- util_merge(low_autocorrelation, high_autocorrelation)  # look at the results show_landscape(list(\"Low autocorrelation\" = low_autocorrelation,                     \"High autocorrelation\" = high_autocorrelation,                     \"Ecotones\" = ecotones                     ))"},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"landscapetools","dir":"Articles","previous_headings":"Static plots","what":"landscapetools","title":"Visualize Neutral Landscape Models","text":"landscapetools function show_landscape developed help users adhere standards concerning color scales typography. means example default viridis color scale applied makes plots easier read colorblindness.","code":"library(\"NLMR\") library(\"landscapetools\")  landscape <- nlm_mosaictess(200, 200, germs = 444)  # default theme show_landscape(landscape) # ... chose another color scale from viridis (\"E\" = cividis) show_landscape(landscape, viridis_scale = \"E\") # ... chose any other scale: # show_landscape returns a ggplot2 object, so you can follow your usual ggplot2 # workflow and change the color, axis labels, ... library(ggplot2) library(pals) show_landscape(landscape)  +    scale_fill_gradientn(colours=pals::parula(100)) + # parula color scale   theme_void() +  # minimal theme   guides(fill = FALSE) # remove legend"},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"rastervis","dir":"Articles","previous_headings":"Static plots","what":"rasterVis","title":"Visualize Neutral Landscape Models","text":"rasterVis also offers convenience functions plot raster, example:  Another nice function rasterVis gplot(), wrapper use ggplot2 raster data without reshaping data long data.frame:","code":"library(\"NLMR\") library(\"rasterVis\")  landscape <- nlm_mosaictess(200, 200, germs = 444)  levelplot(landscape, , margin = FALSE) library(\"NLMR\") library(\"rasterVis\")  landscape <- nlm_mosaictess(200, 200, germs = 444)  gplot(landscape) +    geom_tile(aes(fill = value)) +    coord_equal()"},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"ggplot2","dir":"Articles","previous_headings":"Static plots","what":"ggplot2","title":"Visualize Neutral Landscape Models","text":"want start scratch ggplot2:","code":"library(\"NLMR\") library(\"raster\") library(\"ggplot2\")  landscape <- nlm_mosaictess(200, 200, germs = 444)  # transform to long format for ggplot2 landscape_long <- as.data.frame(landscape, xy = TRUE)  # plot with ggplot2 ggplot(landscape_long, aes(x,y)) +    geom_tile(aes(fill = layer)) +    coord_equal()"},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"raster-plot","dir":"Articles","previous_headings":"Static plots","what":"raster + plot()","title":"Visualize Neutral Landscape Models","text":"… lot hurry, raster also plot method raster:","code":"library(\"NLMR\") library(\"raster\")  landscape <- nlm_mosaictess(200, 200, germs = 444)  plot(landscape)"},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"perspective-plot","dir":"Articles","previous_headings":"Static plots","what":"Perspective plot","title":"Visualize Neutral Landscape Models","text":"","code":"library(\"raster\") library(\"NLMR\") landscape <- nlm_fbm(ncol = 50, nrow = 50, fract_dim = 1.3) ## 'RandomFields' will NOT use OMP ## The package 'RandomFieldsUtils' has been compiled without appropriate SIMD/AVX2 flags. So, calculations can be slow. If the package is recompiled with the necessary flags, the calculations might be faster. ## R should be restarted after re-compiling. The argument 'install.control' might be used to run the re-compilation without asking and to pass further arguments to 'install.packages', e.g., 'RFoptions(install.control=list(verbose=TRUE))' ## To avoid this feedback, set 'RFoptions(install=\"no\")' or 'RFoptions(install=\"install\")' before calling any other function of 'RandomFieldsUtils'. ##  ## RandomFieldsUtils sees SSE2,  but not GPU, AVX2, AVX,OMP. ##  ##  ## Or call 'RFoptions(install=\"no\")' after loading to avoid being asked again. ## Searching for tar balls...  ## The following package will be re-installed: ##  RandomFieldsUtils_1.1.0 from cran persp(landscape,       exp=0.5,       maxpixels = 5000,       theta = 125,       phi=45,       xlab=\"Longitude\",       ylab=\"Latitude\",       zlab=\"Z\",       shade = 0.45)"},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"contour-plots","dir":"Articles","previous_headings":"Static plots","what":"Contour plots","title":"Visualize Neutral Landscape Models","text":"","code":"library(\"NLMR\") library(\"rasterVis\")  landscape <- nlm_mpd(ncol = 50, nrow = 50, roughness = 0.6)   contourplot(landscape,             pretty = TRUE) levelplot(landscape,           contour = TRUE,           pretty = TRUE)"},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"rgl-rastervis","dir":"Articles","previous_headings":"Interactive plots","what":"rgl + rasterVis","title":"Visualize Neutral Landscape Models","text":"","code":"library(\"rgl\") library(\"rasterVis\") library(\"viridis\") library(\"NLMR\") landscape <- nlm_mpd(ncol = 100, nrow = 100, roughness = 0.6)  plot3D(landscape,        zfac=2,        lit=FALSE,        col=colorRampPalette(magma(11)))  rglwidget()"},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"highcharter-plotly","dir":"Articles","previous_headings":"Interactive plots","what":"highcharter + plotly","title":"Visualize Neutral Landscape Models","text":"plot chunk unnamed-chunk-9 plot chunk unnamed-chunk-9","code":"library(\"highcharter\") library(\"magrittr\") library(\"plotly\") library(\"NLMR\")  # create a NLM to work with landscape <- nlm_mosaicfield(ncol = 100, nrow = 100, n = 20)  # coerce to matrix landscape_matrix <- raster::as.matrix(landscape)  # plot interactive graph hchart(landscape_matrix) %>%   # changing default color   hc_colorAxis(stops = color_stops(colors = viridis::inferno(10))) %>%   hc_exporting(     enabled = TRUE   ) # With plotly we can combine the interactive approach with the 3D Visualization plot_ly(z = as.matrix(landscape_matrix), type = \"surface\", colors = viridis::magma(8))"},{"path":"https://docs.ropensci.org/NLMR/articles/visualize_nlms.html","id":"rayshader","dir":"Articles","previous_headings":"Interactive plots","what":"rayshader","title":"Visualize Neutral Landscape Models","text":"","code":"library(rayshader) library(NLMR) library(raster) library(rgl)  set.seed(123)  landscape <- nlm_mpd(1000, 1000, roughness = 0.6, rescale = FALSE) * 500 landscape <- raster::focal(landscape, w=matrix(1, 31, 31), mean, pad = TRUE, padValue=0) landscape <- raster::as.matrix(landscape)  shadow = ray_shade(landscape,                    zscale=1,                    lambert=FALSE) amb = ambient_shade(landscape,                     zscale=1,                     sunbreaks = 15,                      maxsearch = 100)  landscape %>%   sphere_shade(zscale=5,texture = \"imhof1\") %>%    add_water(detect_water(landscape, min_area = 4000)) %>%   add_shadow(shadow,0.7) %>%   add_shadow(amb) %>%   add_shadow(lamb_shade(landscape)) %>%   plot_3d(landscape,           zscale=5,           fov=0,           theta=-45,           phi=45,           windowsize=c(1200,1200),           zoom=1.2,           water=TRUE,            wateralpha = 0.8,           watercolor = \"lightblue\",           waterlinecolor = \"white\",           waterlinealpha = 0.3,           solid = FALSE) library(rayshader) library(NLMR) library(raster) library(rgl)  set.seed(123)  landscape <- nlm_mpd(1000, 1000, roughness = 0.6, rescale = FALSE) * 500 landscape <- raster::focal(landscape, w=matrix(1, 31, 31), mean, pad = TRUE, padValue=0) landscape <- raster::as.matrix(landscape)  shadow = ray_shade(landscape,                    zscale=1,                    lambert=FALSE) amb = ambient_shade(landscape,                     zscale=1,                     sunbreaks = 15,                      maxsearch = 100)  landscape %>%   sphere_shade(zscale=5,texture = \"imhof1\") %>%    add_water(detect_water(landscape, min_area = 4000)) %>%   add_shadow(shadow,0.7) %>%   add_shadow(amb) %>%   add_shadow(lamb_shade(landscape)) %>%   plot_3d(landscape,           zscale = 5,           fov = 0,           theta = -45,           phi = 45,           windowsize = c(1200, 1200),           zoom = 1.2,           water = TRUE,           wateralpha = 0.8,           watercolor = \"lightblue\",           waterlinecolor = \"white\",           waterlinealpha = 0.3,           solid = TRUE,           solidcolor = \"grey75\")  render_depth(   focallength = 30,   fstop = 2,   bokehshape = \"hex\",   bokehintensity = 5,   progbar = FALSE )"},{"path":"https://docs.ropensci.org/NLMR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marco Sciaini. Author, maintainer. Matthias Fritsch. Author. Maximilian Hesselbarth. Author. Craig Simpkins. Author. Cédric Scherer. Author. Sebastian Hanß. Author. Laura Graham. Reviewer.            Laura reviewed package rOpenSci, see                    https://github.com/ropensci/onboarding/issues/188 Jeffrey Hollister. Reviewer.            Jeffrey reviewed package rOpenSci, see                    https://github.com/ropensci/onboarding/issues/188","code":""},{"path":"https://docs.ropensci.org/NLMR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sciaini M, Fritsch M, Scherer C, Simpkins CE. NLMR landscapetools: integrated environment simulating modifying neutral landscape models R. Methods Ecol Evol. 2018;9:2240–2248.","code":"@Article{,   title = {NLMR and landscapetools: An integrated environment for simulating and modifying neutral landscape models in R},   author = {Marco Sciaini and Matthias Fritsch and Cedric Scherer and Craig E. Simpkins},   journal = {Methods in Ecololgy and Evolution},   volume = {00},   pages = {1--9},   year = {2018},   url = {https://doi.org/10.1111/2041-210X.13076}, }"},{"path":"https://docs.ropensci.org/NLMR/index.html","id":"nlmr-","dir":"","previous_headings":"","what":"Simulating Neutral Landscape Models","title":"Simulating Neutral Landscape Models","text":"NLMR R package simulating neutral landscape models (NLM). Designed generic framework like NLMpy, leverages ability simulate common NLM described ecological literature. NLMR builds advantages raster package returns simulation RasterLayer objects, thus ensuring direct compatibility common GIS tasks flexible simple usage. Furthermore, simulates NLMs within self-contained, reproducible framework.","code":""},{"path":"https://docs.ropensci.org/NLMR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulating Neutral Landscape Models","text":"NLMR available CRAN moment (see #95). way install NLMR moment : Windows users need install RTools first. Rtools provides compiler helpers compile code R Windows. Download Rtools : https://cran.r-project.org/bin/windows/Rtools/ select appropriate Rtools version (4.0 R 4.x.x) Install Rtools directory fancy characters path, e.g. C:\\R\\Rtools safe. install, right click Rtools40.exe select “Run administrator”. installation make sure select “Add Rtools PATH”. Otherwise, accept defaults everything else.","code":"# install.packages(\"remotes\") remotes::install_github(\"cran/RandomFieldsUtils\") remotes::install_github(\"cran/RandomFields\") remotes::install_github(\"ropensci/NLMR\")"},{"path":"https://docs.ropensci.org/NLMR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Simulating Neutral Landscape Models","text":"neutral landscape models simulated single function (starting nlm_) NLMR, e.g.:","code":"random_cluster <- NLMR::nlm_randomcluster(nrow = 100,                                       ncol = 100,                                       p    = 0.5,                                       ai   = c(0.3, 0.6, 0.1),                                       rescale = FALSE)  random_curdling <- NLMR::nlm_curds(curds = c(0.5, 0.3, 0.6),                               recursion_steps = c(32, 6, 2))   midpoint_displacememt <- NLMR::nlm_mpd(ncol = 100,                                  nrow = 100,                                  roughness = 0.61)"},{"path":"https://docs.ropensci.org/NLMR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Simulating Neutral Landscape Models","text":"NLMR supplies 15 NLM algorithms, several options simulate derivatives . algorithms differ spatial auto-correlation, auto-correlation (random NLM) constant gradient (planar gradients):","code":""},{"path":"https://docs.ropensci.org/NLMR/index.html","id":"see-also","dir":"","previous_headings":"","what":"See also","title":"Simulating Neutral Landscape Models","text":"NLMR split development process - minimal dependency version simulating neutral landscape models utility toolbox facilitate workflows raster data. interested merging, visualizing handling neutral landscape models look landscapetools package.","code":""},{"path":"https://docs.ropensci.org/NLMR/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Simulating Neutral Landscape Models","text":"Please report issues bugs. License: GPL3 Additionally, keep record publications use NLMR. Hence, used NLMR please file issue GitHub can add list. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/NLMR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating Neutral Landscape Models — NLMR-package","title":"Simulating Neutral Landscape Models — NLMR-package","text":"NLMR R package simulating neutral landscape models (NLMs).","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/NLMR-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulating Neutral Landscape Models — NLMR-package","text":"package contains vignettes introduce NLM basic usage NLMR package. vignettes package listed . Quickstart Guide Short walk-NLMR package handle simulations.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/reference/NLMR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulating Neutral Landscape Models — NLMR-package","text":"Maintainer: Marco Sciaini marco.sciaini@posteo.net (ORCID) Authors: Matthias Fritsch matthias.fritsch@forst.uni-goettingen.de Maximilian Hesselbarth mhk.hesselbarth@gmail.com Craig Simpkins simpkinscraig063@gmail.com (ORCID) Cédric Scherer cedricphilippscherer@gmail.com (ORCID) Sebastian Hanß (ORCID) contributors: Laura Graham (Laura reviewed package rOpenSci, see   https://github.com/ropensci/onboarding/issues/188) [reviewer] Jeffrey Hollister (Jeffrey reviewed package rOpenSci, see   https://github.com/ropensci/onboarding/issues/188) [reviewer]","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_curds.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_curds — nlm_curds","title":"nlm_curds — nlm_curds","text":"Simulates random curd neutral landscape model optional wheys.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_curds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_curds — nlm_curds","text":"","code":"nlm_curds(curds, recursion_steps, wheyes = NULL, resolution = 1)"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_curds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_curds — nlm_curds","text":"curds [numerical(x)] Vector percentage/s fill curds (fill habitat (value == TRUE)). recursion_steps [numerical(x)] Vector successive cutting steps blocks (split 1 block x blocks). wheyes [numerical(x)] Vector percentage/s fill wheys, fill matrix additional step habitat. resolution [numerical(1)] Resolution resulting raster.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_curds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_curds — nlm_curds","text":"raster","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_curds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_curds — nlm_curds","text":"Random curdling recursively subdivides plane blocks. level recursion, fraction blocks declared habitat (value == TRUE) remaining blocks continue defined matrix (value == FALSE) enter next recursive cycle. optional argument (wheyes) allows wheys added, set proportion cells declared matrix (value == FALSE) recursion, now set habitat cells (value == TRUE). $$curds_{1} = curds_{2} = recursion_steps_{2} = ... = curds_{n} = recursion_steps_{n}$$ models resembles binary random map. Note can set ncol nrow landscape algorithm. amount cells hence dimension raster given vector product recursive steps.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_curds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_curds — nlm_curds","text":"Keitt TH. 2000. Spectral representation neutral landscapes. Landscape Ecology 15:479-493. Szaro, Robert C., David W. Johnston, eds. Biodiversity managed landscapes: theory practice. Oxford University Press, USA, 1996.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_curds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_curds — nlm_curds","text":"","code":"# simulate random curdling (random_curdling <- nlm_curds(curds = c(0.5, 0.3, 0.6),                               recursion_steps = c(32, 6, 2))) #> class      : RasterLayer  #> dimensions : 384, 384, 147456  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 384, 0, 384  (xmin, xmax, ymin, ymax) #> crs        : NA  #> source     : memory #> names      : layer  #> values     : 0, 1  (min, max) #>   # simulate wheyed curdling (wheyed_curdling <- nlm_curds(curds = c(0.5, 0.3, 0.6),                               recursion_steps = c(32, 6, 2),                               wheyes = c(0.1, 0.05, 0.2))) #> class      : RasterLayer  #> dimensions : 384, 384, 147456  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 384, 0, 384  (xmin, xmax, ymin, ymax) #> crs        : NA  #> source     : memory #> names      : layer  #> values     : 0, 1  (min, max) #>  if (FALSE) { # Visualize the NLMs landscapetools::show_landscape(random_curdling) landscapetools::show_landscape(wheyed_curdling) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_distancegradient.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_distancegradient — nlm_distancegradient","title":"nlm_distancegradient — nlm_distancegradient","text":"Simulates distance-gradient neutral landscape model.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_distancegradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_distancegradient — nlm_distancegradient","text":"","code":"nlm_distancegradient(ncol, nrow, resolution = 1, origin, rescale = TRUE)"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_distancegradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_distancegradient — nlm_distancegradient","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. origin [numerical(4)] Edge coordinates origin (raster::extent xmin, xmax, ymin, ymax) distance measurement. rescale [logical(1)] TRUE (default), values rescaled 0-1. Otherwise, distance raster units calculated.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_distancegradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_distancegradient — nlm_distancegradient","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_distancegradient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_distancegradient — nlm_distancegradient","text":"function takes number columns rows input creates RasterLayer extent. Origin numeric vector xmin, xmax, ymin, ymax rectangle inside raster distance measured.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_distancegradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_distancegradient — nlm_distancegradient","text":"","code":"# simulate a distance gradient distance_gradient <- nlm_distancegradient(ncol = 100, nrow = 100,                                            origin = c(20, 30, 10, 15)) if (FALSE) { # visualize the NLM landscapetools::show_landscape(distance_gradient) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_edgegradient.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_edgegradient — nlm_edgegradient","title":"nlm_edgegradient — nlm_edgegradient","text":"Simulates edge-gradient neutral landscape model.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_edgegradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_edgegradient — nlm_edgegradient","text":"","code":"nlm_edgegradient(ncol, nrow, resolution = 1, direction = NA, rescale = TRUE)"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_edgegradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_edgegradient — nlm_edgegradient","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. direction [numerical(1)] Direction gradient (0 360 degrees), unspecified direction randomly determined. rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_edgegradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_edgegradient — nlm_edgegradient","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_edgegradient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_edgegradient — nlm_edgegradient","text":"Simulates linear gradient orientated specified random direction central peak running perpendicular gradient direction.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_edgegradient.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_edgegradient — nlm_edgegradient","text":"Travis, J.M.J. & Dytham, C. (2004) method simulating patterns habitat availability static dynamic range margins. Oikos, 104, 410–416.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_edgegradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_edgegradient — nlm_edgegradient","text":"","code":"# simulate random curdling edge_gradient <- nlm_edgegradient(ncol = 100, nrow = 100, direction = 80)  if (FALSE) { # visualize the NLM landscapetools::show_landscape(edge_gradient) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_fbm.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_fbm — nlm_fbm","title":"nlm_fbm — nlm_fbm","text":"Creates two-dimensional fractional Brownian motion neutral landscape model.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_fbm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_fbm — nlm_fbm","text":"","code":"nlm_fbm(   ncol,   nrow,   resolution = 1,   fract_dim = 1,   user_seed = NULL,   rescale = TRUE,   ... )"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_fbm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_fbm — nlm_fbm","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. fract_dim [numerical(1)] fractal dimension process (0,2) user_seed [numerical(1)] Set random seed simulation rescale [numeric(1)] TRUE (default), values rescaled 0-1. ... options RandomFields::RFoptions, especially using fractal dimension ~ 1.6 1.9 one must set option modus_operandi = \"sloppy\".","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_fbm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_fbm — nlm_fbm","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_fbm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_fbm — nlm_fbm","text":"Neutral landscapes generated using fractional Brownian motion,  extension Brownian motion amount correlation   steps controlled frac_dim. high value frac_dim produces    relatively smooth, correlated surface low value produces rough, uncorrelated one.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_fbm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_fbm — nlm_fbm","text":"Travis, J.M.J. & Dytham, C. (2004). method simulating patterns habitat availability static dynamic range margins. Oikos , 104, 410–416. Martin Schlather, Alexander Malinowski, Peter J. Menck, Marco Oesting, Kirstin Strokorb (2015). nlm_fBm. Journal Statistical Software, 63(8), 1-25. URL http://www.jstatsoft.org/v63/i08/.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_fbm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_fbm — nlm_fbm","text":"","code":"# simulate fractional brownian motion fbm_raster  <- nlm_fbm(ncol = 20, nrow = 30, fract_dim = 0.8)  if (FALSE) {  # visualize the NLM landscapetools::show_landscape(fbm_raster)  }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_gaussianfield.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_gaussianfield — nlm_gaussianfield","title":"nlm_gaussianfield — nlm_gaussianfield","text":"Simulates spatially correlated random fields (Gaussian random fields) neutral landscape model.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_gaussianfield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_gaussianfield — nlm_gaussianfield","text":"","code":"nlm_gaussianfield(   ncol,   nrow,   resolution = 1,   autocorr_range = 10,   mag_var = 5,   nug = 0.2,   mean = 0.5,   user_seed = NULL,   rescale = TRUE )"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_gaussianfield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_gaussianfield — nlm_gaussianfield","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. autocorr_range [numerical(1)] Maximum range (raster units) spatial autocorrelation. mag_var [numerical(1)] Magnitude variation entire landscape. nug [numerical(1)] Magnitude variation scale autocorr_range, smaller values lead homogeneous landscapes. mean [numerical(1)] Mean value field. user_seed [numerical(1)] Set random seed simulation rescale [numeric(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_gaussianfield.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_gaussianfield — nlm_gaussianfield","text":"Gaussian random fields collection random numbers spatially discrete set coordinates (landscape raster). Natural sciences often apply spatial autocorrelation, meaning objects distant distinct one another closer objects.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_gaussianfield.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_gaussianfield — nlm_gaussianfield","text":"Kéry & Royle (2016) Applied Hierarchical Modeling Ecology Chapter 20","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_gaussianfield.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_gaussianfield — nlm_gaussianfield","text":"","code":"# simulate random gaussian field gaussian_field <- nlm_gaussianfield(ncol = 90, nrow = 90,                                     autocorr_range = 60,                                     mag_var = 8,                                     nug = 5)  if (FALSE) { # visualize the NLM landscapetools::show_landscape(gaussian_field) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicfield.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_mosaicfield — nlm_mosaicfield","title":"nlm_mosaicfield — nlm_mosaicfield","text":"Simulates mosaic random field neutral landscape model.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicfield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_mosaicfield — nlm_mosaicfield","text":"","code":"nlm_mosaicfield(   ncol,   nrow,   resolution = 1,   n = 20,   mosaic_mean = 0.5,   mosaic_sd = 0.5,   collect = FALSE,   infinit = FALSE,   rescale = TRUE )"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicfield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_mosaicfield — nlm_mosaicfield","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. n [numerical(1)] Number steps mosaic random field algorithm run mosaic_mean [numerical(1)] Mean value mosaic displacement distribution mosaic_sd [numerical(1)] Standard deviation mosaic displacement distribution collect [logical(1)] return RasterBrick steps 1:n infinit [logical(1)] return raster random mosaic field algorithm infinite steps rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicfield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_mosaicfield — nlm_mosaicfield","text":"RasterLayer List RasterLayer/s /RasterBrick","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicfield.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_mosaicfield — nlm_mosaicfield","text":"Schwab, Dimitri, Martin Schlather, Jürgen Potthoff. \"general class mosaic random fields.\" arXiv preprint arXiv:1709.01441 (2017).  Baddeley, Adrian, Ege Rubak, Rolf Turner. Spatial point patterns: methodology applications R. CRC Press, 2015.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicfield.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_mosaicfield — nlm_mosaicfield","text":"","code":"# simulate mosaic random field mosaic_field <- nlm_mosaicfield(ncol = 100,                                 nrow = 200,                                 n = NA,                                 infinit = TRUE,                                 collect = FALSE) if (FALSE) { # visualize the NLM landscapetools::show_landscape(mosaic_field) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicgibbs.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_mosaicgibbs — nlm_mosaicgibbs","title":"nlm_mosaicgibbs — nlm_mosaicgibbs","text":"Simulate neutral landscape model using Gibbs algorithm introduced Gaucherel (2008).","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicgibbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_mosaicgibbs — nlm_mosaicgibbs","text":"","code":"nlm_mosaicgibbs(   ncol,   nrow,   resolution = 1,   germs,   R,   patch_classes,   rescale = TRUE )"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicgibbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_mosaicgibbs — nlm_mosaicgibbs","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. germs [numerical(1)] Intensity parameter (non-negative integer). R [numerical(1)] Interaction radius (non-negative integer) fitting spatial point pattern process - min. distance germs map units. patch_classes [numerical(1)] Number classes germs. rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicgibbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_mosaicgibbs — nlm_mosaicgibbs","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicgibbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_mosaicgibbs — nlm_mosaicgibbs","text":"nlm_mosaicgibbs offers second option simulating neutral landscape model described Gaucherel (2008). method works principal like tessellation method (nlm_mosaictess), instead random point pattern algorithm fits simulated realization Strauss process. Strauss process starts given number points uses minimization approach fit point pattern given interaction parameter (0 - hardcore process; 1 - Poisson process) interaction radius (distance points/germs apart).","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicgibbs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_mosaicgibbs — nlm_mosaicgibbs","text":"Gaucherel, C. (2008) Neutral models polygonal landscapes linear networks. Ecological Modelling, 219, 39 - 48.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaicgibbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_mosaicgibbs — nlm_mosaicgibbs","text":"","code":"# simulate polygonal landscapes mosaicgibbs <- nlm_mosaicgibbs(ncol = 40,                               nrow = 30,                               germs = 20,                               R = 0.02,                               patch_classes = 12)  if (FALSE) { # visualize the NLM landscapetools::show_landscape(mosaicgibbs) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaictess.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_mosaictess — nlm_mosaictess","title":"nlm_mosaictess — nlm_mosaictess","text":"Simulate neutral landscape model using tesselation approach introduced Gaucherel (2008).","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaictess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_mosaictess — nlm_mosaictess","text":"","code":"nlm_mosaictess(ncol, nrow, resolution = 1, germs, rescale = TRUE)"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaictess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_mosaictess — nlm_mosaictess","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. germs [numerical(1)] Intensity parameter (non-negative integer). rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaictess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_mosaictess — nlm_mosaictess","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaictess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_mosaictess — nlm_mosaictess","text":"nlm_mosaictess offers first option simulating neutral landscape model described Gaucherel (2008). generates random point pattern (germs) independent distribution uses Voronoi tessellation simulate mosaic landscapes.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaictess.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_mosaictess — nlm_mosaictess","text":"Gaucherel, C. (2008) Neutral models polygonal landscapes linear networks. Ecological Modelling, 219, 39 - 48.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mosaictess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_mosaictess — nlm_mosaictess","text":"","code":"# simulate polygonal landscapes mosaictess <- nlm_mosaictess(ncol = 30, nrow = 60, germs = 200)  if (FALSE) { # visualize the NLM landscapetools::show_landscape(mosaictess) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mpd.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_mpd — nlm_mpd","title":"nlm_mpd — nlm_mpd","text":"Simulates midpoint displacement neutral landscape model.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_mpd — nlm_mpd","text":"","code":"nlm_mpd(   ncol,   nrow,   resolution = 1,   roughness = 0.5,   rand_dev = 1,   torus = FALSE,   rescale = TRUE,   verbose = TRUE )"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mpd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_mpd — nlm_mpd","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. roughness [numerical(1)] Controls level spatial autocorrelation (!= Hurst exponent) rand_dev [numerical(1)] Initial standard deviation displacement step (default == 1), sets scale overall variance resulting landscape. torus [logical(1)]  Logical value indicating wether algorithm simulated torus (default FALSE) rescale [logical(1)] TRUE (default), values rescaled 0-1. verbose [logical(1)] TRUE (default), user gets warning functions changes dimensions appropriate one algorithm.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mpd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_mpd — nlm_mpd","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mpd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_mpd — nlm_mpd","text":"algorithm direct implementation midpoint displacement algorithm. performs following steps: Initialization:  Determine smallest fit  max(ncol, nrow) n^2 + 1 assign value n.  Setup matrix size (n^2 + 1)*(n^2 + 1).  Afterwards, assign random value four corners matrix. Square Step:  square matrix, assign average  four corner points plus random value midpoint square. Diamond Step:  diamond matrix, assign average   four corner points plus random value midpoint   diamond. iteration roughness, approximation common Hurst exponent, reduced.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mpd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_mpd — nlm_mpd","text":"https://en.wikipedia.org/wiki/Diamond-square_algorithm","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_mpd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_mpd — nlm_mpd","text":"","code":"# simulate midpoint displacement midpoint_displacememt <- nlm_mpd(ncol = 100,                                  nrow = 100,                                  roughness = 0.3) #> Warning: nlm_mpd changes the dimensions of the RasterLayer if even ncols/nrows are choosen. if (FALSE) { # visualize the NLM landscapetools::show_landscape(midpoint_displacememt) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_neigh.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_neigh — nlm_neigh","title":"nlm_neigh — nlm_neigh","text":"Create neutral landscape model categories clustering  based neighborhood characteristics.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_neigh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_neigh — nlm_neigh","text":"","code":"nlm_neigh(   ncol,   nrow,   resolution = 1,   p_neigh,   p_empty,   categories = 3,   neighbourhood = 4,   proportions = NA,   rescale = TRUE )"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_neigh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_neigh — nlm_neigh","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. p_neigh [numerical(1)] Probability cell turning value neighbor  higher value. p_empty [numerical(1)] Probability cell receives value neighbors value (.e. zero). categories [numerical(1)] Number categories used. neighbourhood [numerical(1)] neighbourhood used determined adjacent cells: `8 (\"Moore\")` takes eight surrounding cells, `4 (\"Von-Neumann\")` takes four adjacent cells (.e. left, right, upper lower cells). proportions [vector(1)] algorithm uses uniform proportions category default. vector many proportions categories sums 1 can used distributions. rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_neigh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_neigh — nlm_neigh","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_neigh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_neigh — nlm_neigh","text":"algorithm draws random cell turns given category based  probabilities p_neigh p_empty, respectively. decision  based probability p_neigh, cell Moore- (8 cells)  Von-Neumann-neighborhood (4 cells), otherwise based p_empty. create  clustered neutral landscape models, p_empty (significantly) smaller  p_neigh. default, Von-Neumann-neighborhood used check adjacent  cells. algorithm starts highest categorical value.  proportion cells value reached, categorical value  reduced 1. default, uniform distribution categories  applied.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_neigh.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_neigh — nlm_neigh","text":"Scherer, Cédric, et al. \"Merging trait-based individual-based modelling: animal functional type approach explore responses birds climatic land use changes semi-arid African savannas.\" Ecological Modelling 326 (2016): 75-89.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_neigh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_neigh — nlm_neigh","text":"","code":"# simulate neighborhood model neigh_raster <- nlm_neigh(ncol = 50, nrow = 50, p_neigh = 0.7, p_empty = 0.1,                     categories = 5, neighbourhood = 4)  if (FALSE) { # visualize the NLM landscapetools::show_landscape(neigh_raster) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_percolation.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_percolation — nlm_percolation","title":"nlm_percolation — nlm_percolation","text":"Generates random percolation neutral landscape model.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_percolation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_percolation — nlm_percolation","text":"","code":"nlm_percolation(ncol, nrow, resolution = 1, prob = 0.5)"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_percolation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_percolation — nlm_percolation","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. prob [numerical(1)] Probability value setting cell 1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_percolation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_percolation — nlm_percolation","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_percolation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_percolation — nlm_percolation","text":"simulation random percolation map accomplished two steps: Initialization:  Setup matrix size (ncol*nrow) Map generation:  cell matrix single uniformly  distributed random number generated tested probability  prob. random number smaller prob, cell set  TRUE - higher cell set FALSE.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_percolation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_percolation — nlm_percolation","text":"1. Gardner RH, O'Neill R V, Turner MG, Dale VH. 1989. Quantifying scale-dependent effects animal movement simple percolation models.  Landscape Ecology 3:217 - 227. 2. Gustafson, E.J. & Parker, G.R. (1992) Relationships landcover proportion indices landscape spatial pattern. Landscape Ecology , 7, 101 - 110.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_percolation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_percolation — nlm_percolation","text":"","code":"# simulate percolation model percolation <- nlm_percolation(ncol = 100, nrow = 100, prob = 0.5) if (FALSE) { # visualize the NLM landscapetools::show_landscape(percolation) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_planargradient.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_planargradient — nlm_planargradient","title":"nlm_planargradient — nlm_planargradient","text":"Simulates planar gradient neutral landscape model.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_planargradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_planargradient — nlm_planargradient","text":"","code":"nlm_planargradient(ncol, nrow, resolution = 1, direction = NA, rescale = TRUE)"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_planargradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_planargradient — nlm_planargradient","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. direction [numerical(1)] Direction gradient degrees, unspecified direction randomly determined. rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_planargradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_planargradient — nlm_planargradient","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_planargradient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_planargradient — nlm_planargradient","text":"Simulates linear gradient sloping specified random direction.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_planargradient.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_planargradient — nlm_planargradient","text":"Palmer, M.W. (1992) coexistence species fractal landscapes. American Naturalist, 139, 375 - 397.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_planargradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_planargradient — nlm_planargradient","text":"","code":"# simulate planar gradient planar_gradient <- nlm_planargradient(ncol = 200, nrow = 200)  if (FALSE) { # visualize the NLM landscapetools::show_landscape(planar_gradient) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_random.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_random — nlm_random","title":"nlm_random — nlm_random","text":"Simulates spatially random neutral landscape model values drawn uniform distribution.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_random — nlm_random","text":"","code":"nlm_random(ncol, nrow, resolution = 1, rescale = TRUE)"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_random — nlm_random","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_random — nlm_random","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_random.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_random — nlm_random","text":"function takes number columns rows input creates RasterLayer extent. raster cell randomly assigned value 0 1 drawn uniform distribution (runif(1,0,1)).","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_random — nlm_random","text":"","code":"# simulate spatially random model random <- nlm_random(ncol = 200, nrow = 100)  if (FALSE) { # visualize the NLM landscapetools::show_landscape(random) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomcluster.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_randomcluster — nlm_randomcluster","title":"nlm_randomcluster — nlm_randomcluster","text":"Simulates random cluster nearest-neighbour neutral landscape.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomcluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_randomcluster — nlm_randomcluster","text":"","code":"nlm_randomcluster(   ncol,   nrow,   resolution = 1,   p,   ai = c(0.5, 0.5),   neighbourhood = 4,   rescale = TRUE )"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomcluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_randomcluster — nlm_randomcluster","text":"ncol [integer(1)] Number columns forming raster. nrow [integer(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. p [numerical(1)] Defines proportion elements randomly selected form clusters. ai Vector cluster type distribution (percentages occupancy). directly controls number types via given length. neighbourhood [numerical(1)] Clusters defined using set neighbourhood structures,  4 (Rook's von Neumann neighbourhood) (default), 8 (Queen's Moore neighbourhood). rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomcluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_randomcluster — nlm_randomcluster","text":"Raster random values ranging 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomcluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_randomcluster — nlm_randomcluster","text":"direct implementation steps - D modified random clusters algorithm Saura & Martínez-Millán (2000), creates naturalistic patchy patterns.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomcluster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_randomcluster — nlm_randomcluster","text":"Saura, S. & Martínez-Millán, J. (2000) Landscape patterns simulation modified random clusters method. Landscape Ecology, 15, 661 – 678.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomcluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_randomcluster — nlm_randomcluster","text":"","code":"# simulate random clustering random_cluster <- nlm_randomcluster(ncol = 30, nrow = 30,                                      p = 0.4,                                      ai = c(0.25, 0.25, 0.5)) #> Loading required namespace: igraph if (FALSE) { # visualize the NLM landscapetools::show_landscape(random_cluster) }"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomrectangularcluster.html","id":null,"dir":"Reference","previous_headings":"","what":"nlm_randomrectangularcluster — nlm_randomrectangularcluster","title":"nlm_randomrectangularcluster — nlm_randomrectangularcluster","text":"Simulates random rectangular clusters neutral landscape model values ranging 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomrectangularcluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nlm_randomrectangularcluster — nlm_randomrectangularcluster","text":"","code":"nlm_randomrectangularcluster(   ncol,   nrow,   resolution = 1,   minl,   maxl,   rescale = TRUE )"},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomrectangularcluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nlm_randomrectangularcluster — nlm_randomrectangularcluster","text":"ncol [numerical(1)] Number columns forming raster. nrow [numerical(1)] Number rows forming raster. resolution [numerical(1)] Resolution raster. minl [numerical(1)] minimum possible width height random rectangular cluster. maxl [numerical(1)] maximum possible width height random rectangular cluster. rescale [logical(1)] TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomrectangularcluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nlm_randomrectangularcluster — nlm_randomrectangularcluster","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomrectangularcluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nlm_randomrectangularcluster — nlm_randomrectangularcluster","text":"random rectangular cluster algorithm starts fill raster randomly rectangles defined minl maxl surface landscape completely covered. one type realisation \"falling/dead leaves\" algorithm, details see Galerne & Gousseau (2012).","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomrectangularcluster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"nlm_randomrectangularcluster — nlm_randomrectangularcluster","text":"Gustafson, E.J. & Parker, G.R. (1992). Relationships landcover proportion indices landscape spatial pattern. Landscape ecology, 7, 101–110. Galerne B. & Gousseau Y. (2012). Transparent Dead Leaves Model. Advances Applied Probability, Applied Probability Trust, 44, 1–20.","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/nlm_randomrectangularcluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nlm_randomrectangularcluster — nlm_randomrectangularcluster","text":"","code":"# simulate random rectangular cluster randomrectangular_cluster <- nlm_randomrectangularcluster(ncol = 50,                                                           nrow = 30,                                                           minl = 5,                                                           maxl = 10) if (FALSE) { # visualize the NLM landscapetools::show_landscape(randomrectangular_cluster) }"},{"path":"https://docs.ropensci.org/NLMR/reference/util_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"util_rescale — util_rescale","title":"util_rescale — util_rescale","text":"Linearly rescale element values raster range 0 1","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/util_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"util_rescale — util_rescale","text":"","code":"util_rescale(x)"},{"path":"https://docs.ropensci.org/NLMR/reference/util_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"util_rescale — util_rescale","text":"x [Raster* object]","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/util_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"util_rescale — util_rescale","text":"Raster* object values ranging 0-1","code":""},{"path":"https://docs.ropensci.org/NLMR/reference/util_rescale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"util_rescale — util_rescale","text":"Rasters generated nlm_* functions scaled 0 1 default, option can set FALSE needed.","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-1109000-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 1.1.0.9000 Release Notes","title":"NLMR 1.1.0.9000 Release Notes","text":"move RandomFields RandomFieldsUtils Suggests use AdditionalRepositories provide packages since longer available CRAN (#95)","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-042-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.4.2 Release Notes","title":"NLMR 0.4.2 Release Notes","text":"CRAN release: 2019-02-27 Bugfix nlm_mosaicfield rely new version RandomFields","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-041-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.4.1 Release Notes","title":"NLMR 0.4.1 Release Notes","text":"CRAN release: 2019-01-28 Bugfix nlm_mpd rely landscapetools","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-04-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.4 Release Notes","title":"NLMR 0.4 Release Notes","text":"CRAN release: 2018-11-16 nlm_neigh, nlm_mpd nlm_randomrectangularcluster now implemented Rcpp Rcpp also take R random seed Minor bug fixes Improvements documentation examples package website","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-032-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.3.2 Release Notes","title":"NLMR 0.3.2 Release Notes","text":"CRAN release: 2018-10-02 Update citation","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-031-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.3.1 Release Notes","title":"NLMR 0.3.1 Release Notes","text":"CRAN release: 2018-09-28 Minor bug fixes Updated documentation removed purrr dependency","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-030-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.3.0 Release Notes","title":"NLMR 0.3.0 Release Notes","text":"CRAN release: 2018-04-03 successful review rOpenSci contains now neutral landscape models, minimal dependencies contains now utility functions small bug fixes nlm_fBm now nlm_fbm","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-021-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.2.1 Release Notes","title":"NLMR 0.2.1 Release Notes","text":"CRAN release: 2018-02-16 Skip one test CRAN keep Roboto font available Function show_landscape plot list rasters ggplot2 facet Small updates webpage","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-02-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.2 Release Notes","title":"NLMR 0.2 Release Notes","text":"CRAN release: 2018-01-09 Small bug fixes nlm_wheys: Simulates wheyed neutral landscape model Parameter p nlm_curds now controls proportion habitat instead amount matrix Implemented new theme theme_nlm Functions coerce raster tibbles vice versa (facetting ggplot2) now unit tests covering main functionality package Removed several packages dependencies","code":""},{"path":"https://docs.ropensci.org/NLMR/news/index.html","id":"nlmr-010-release-notes","dir":"Changelog","previous_headings":"","what":"NLMR 0.1.0 Release Notes","title":"NLMR 0.1.0 Release Notes","text":"CRAN release: 2017-11-30 v0.1.0 released 30/11/2017 First stable release NLMR","code":""}]
